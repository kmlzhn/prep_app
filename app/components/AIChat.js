'use client';

import { useState, useRef, useEffect } from 'react';

export default function AIChat({ courseTitle, currentTopic, isOpen: externalIsOpen, onClose }) {
  const [isOpen, setIsOpen] = useState(false);
  
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤–Ω–µ—à–Ω–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω–æ
  const actualIsOpen = externalIsOpen !== undefined ? externalIsOpen : isOpen;
  const actualOnClose = onClose || (() => setIsOpen(false));
  const getWelcomeMessage = (course) => {
    const messages = {
      'Speaking Skills': '–ü—Ä–∏–≤–µ—Ç! –Ø –≤–∞—à –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫ –ø–æ Speaking Skills. –ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å —Å –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏–µ–º, —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π –æ—Ç–≤–µ—Ç–æ–≤ –∏ confidence! üé§',
      'Writing Mastery': '–ü—Ä–∏–≤–µ—Ç! –Ø –≤–∞—à –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫ –ø–æ Writing Mastery. –ü–æ–º–æ–≥—É —Å Task 1, Task 2, –≥—Ä–∞–º–º–∞—Ç–∏–∫–æ–π –∏ –∞–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∏–º —Å—Ç–∏–ª–µ–º! ‚úçÔ∏è',
      'Listening Practice': '–ü—Ä–∏–≤–µ—Ç! –Ø –≤–∞—à –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫ –ø–æ Listening Practice. –ù–∞—É—á—É —Å—Ç—Ä–∞—Ç–µ–≥–∏—è–º –ø–æ–Ω–∏–º–∞–Ω–∏—è –∏ —Ä–∞–±–æ—Ç–µ —Å —Ä–∞–∑–Ω—ã–º–∏ –∞–∫—Ü–µ–Ω—Ç–∞–º–∏! üéß',
      'Reading Comprehension': '–ü—Ä–∏–≤–µ—Ç! –Ø –≤–∞—à –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫ –ø–æ Reading Comprehension. –ü–æ–º–æ–≥—É —Å —Ç–µ—Ö–Ω–∏–∫–∞–º–∏ —á—Ç–µ–Ω–∏—è –∏ –ø–æ–Ω–∏–º–∞–Ω–∏–µ–º —Å–ª–æ–∂–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤! üìö',
      '–û—Å–Ω–æ–≤—ã IELTS': '–ü—Ä–∏–≤–µ—Ç! –Ø –≤–∞—à –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –æ—Å–Ω–æ–≤–∞–º IELTS. –†–∞—Å—Å–∫–∞–∂—É –æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ —ç–∫–∑–∞–º–µ–Ω–∞ –∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏—è—Ö –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏! üéØ'
    };
    return messages[course] || messages['–û—Å–Ω–æ–≤—ã IELTS'];
  };

  const [messages, setMessages] = useState([
    {
      id: 1,
      type: 'ai',
      text: getWelcomeMessage(courseTitle),
      timestamp: new Date()
    }
  ]);
  const [inputText, setInputText] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const messagesEndRef = useRef(null);

  const scrollToBottom = () => {
    messagesEndRef.current?.scrollIntoView({ behavior: "smooth" });
  };

  useEffect(() => {
    scrollToBottom();
  }, [messages]);

  const handleSendMessage = async () => {
    if (!inputText.trim()) return;

    const userMessage = {
      id: Date.now(),
      type: 'user',
      text: inputText,
      timestamp: new Date()
    };

    setMessages(prev => [...prev, userMessage]);
    setInputText('');
    setIsLoading(true);

    // –°–∏–º—É–ª—è—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ –ò–ò (–∑–¥–µ—Å—å –±—É–¥–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–π API –≤—ã–∑–æ–≤)
    setTimeout(() => {
      const aiResponse = {
        id: Date.now() + 1,
        type: 'ai',
        text: generateContextualResponse(inputText, courseTitle, currentTopic),
        timestamp: new Date()
      };
      setMessages(prev => [...prev, aiResponse]);
      setIsLoading(false);
    }, 1500);
  };

  const generateContextualResponse = (question, course, topic) => {
    const responses = {
      'Speaking Skills': [
        '–û—Ç–ª–∏—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å –æ Speaking! –î–ª—è Part 1 –≤–∞–∂–Ω–æ –æ—Ç–≤–µ—á–∞—Ç—å –∫—Ä–∞—Ç–∫–æ –∏ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç: –ø—Ä—è–º–æ–π –æ—Ç–≤–µ—Ç + –¥–µ—Ç–∞–ª—å + –ø—Ä–∏–º–µ—Ä.',
        '–í Speaking –≤–∞–∂–Ω–∞ –±–µ–≥–ª–æ—Å—Ç—å —Ä–µ—á–∏. –ù–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–π—Ç–µ—Å—å –Ω–∞ –æ—à–∏–±–∫–∞—Ö - –ø—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≥–æ–≤–æ—Ä–∏—Ç—å. –õ—É—á—à–µ –ø–æ–∫–∞–∑–∞—Ç—å —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å, —á–µ–º –∏–¥–µ–∞–ª—å–Ω—É—é –≥—Ä–∞–º–º–∞—Ç–∏–∫—É.',
        '–î–ª—è Part 2 –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤—Å—é –º–∏–Ω—É—Ç—É –Ω–∞ –ø–æ–¥–≥–æ—Ç–æ–≤–∫—É! –°–æ—Å—Ç–∞–≤—å—Ç–µ –ø–ª–∞–Ω: –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ, 2-3 –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø—É–Ω–∫—Ç–∞, –∑–∞–∫–ª—é—á–µ–Ω–∏–µ. –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –≥–æ–≤–æ—Ä–∏—Ç—å —É–≤–µ—Ä–µ–Ω–Ω–æ.',
        '–í Part 3 –ø–æ–∫–∞–∑—ã–≤–∞–π—Ç–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ—Ä–∞–∑—ã: "On one hand... on the other hand", "It depends on...", "In my opinion..."'
      ],
      'Writing Mastery': [
        '–í Writing –≤–∞–∂–Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞! Task 1: Overview ‚Üí Details ‚Üí Comparisons. Task 2: Introduction ‚Üí Body 1 ‚Üí Body 2 ‚Üí Conclusion.',
        '–î–ª—è Task 1 –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—É—é –ª–µ–∫—Å–∏–∫—É: increase/rise/grow, decrease/fall/drop, remain stable/plateau.',
        '–í Task 2 –∫–∞–∂–¥—ã–π –ø–∞—Ä–∞–≥—Ä–∞—Ñ –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å clear topic sentence. –†–∞–∑–≤–∏–≤–∞–π—Ç–µ –æ–¥–Ω—É –∏–¥–µ—é –Ω–∞ –ø–∞—Ä–∞–≥—Ä–∞—Ñ —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏.',
        '–ê–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∏–π —Å—Ç–∏–ª—å: –∏–∑–±–µ–≥–∞–π—Ç–µ —Å–æ–∫—Ä–∞—â–µ–Ω–∏–π, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞–ª—å–Ω—É—é –ª–µ–∫—Å–∏–∫—É, –ø–∏—à–∏—Ç–µ –≤ —Ç—Ä–µ—Ç—å–µ–º –ª–∏—Ü–µ.'
      ],
      'Listening Practice': [
        '–í Listening —á–∏—Ç–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å—ã –¥–æ –∞—É–¥–∏–æ! –ü–æ–¥—á–µ—Ä–∫–Ω–∏—Ç–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –∏ –ø—Ä–µ–¥—Å–∫–∞–∂–∏—Ç–µ —Ç–∏–ø –æ—Ç–≤–µ—Ç–∞.',
        'Section 1 —Ñ–æ–∫—É—Å–∏—Ä—É–µ—Ç—Å—è –Ω–∞ –¥–µ—Ç–∞–ª—è—Ö: –∏–º–µ–Ω–∞, —á–∏—Å–ª–∞, –∞–¥—Ä–µ—Å–∞. –¢—Ä–µ–Ω–∏—Ä—É–π—Ç–µ spelling –∏ numbers daily.',
        '–í Section 2-4 —Å–ª–µ–¥–∏—Ç–µ –∑–∞ —Å–∏–Ω–æ–Ω–∏–º–∞–º–∏! –ê—É–¥–∏–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ø–∞—Ä–∞—Ñ—Ä–∞–∑—ã, –∞ –Ω–µ —Ç–æ—á–Ω—ã–µ —Å–ª–æ–≤–∞ –∏–∑ –≤–æ–ø—Ä–æ—Å–æ–≤.',
        '–ù–µ –ø–∞–Ω–∏–∫—É–π—Ç–µ, –µ—Å–ª–∏ –ø—Ä–æ–ø—É—Å—Ç–∏–ª–∏ –æ—Ç–≤–µ—Ç. –ü–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É, –Ω–µ –∑–∞—Ü–∏–∫–ª–∏–≤–∞–π—Ç–µ—Å—å.'
      ],
      'Reading Comprehension': [
        '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–µ–º –∫–ª—é—á–µ–≤–æ–µ! 20 –º–∏–Ω—É—Ç –Ω–∞ passage. Skimming ‚Üí Questions ‚Üí Scanning for answers.',
        'True/False/Not Given: TRUE = –≤ —Ç–µ–∫—Å—Ç–µ –µ—Å—Ç—å, FALSE = –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏—Ç —Ç–µ–∫—Å—Ç—É, NOT GIVEN = –Ω–µ —É–ø–æ–º–∏–Ω–∞–µ—Ç—Å—è.',
        'Matching Headings: —á–∏—Ç–∞–π—Ç–µ –ø–µ—Ä–≤–æ–µ –∏ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–∞—Ä–∞–≥—Ä–∞—Ñ–∞ –¥–ª—è –æ–±—â–µ–π –∏–¥–µ–∏.',
        '–í —Å–ª–æ–∂–Ω—ã—Ö —Ç–µ–∫—Å—Ç–∞—Ö –∏—â–∏—Ç–µ linking words: however, furthermore, in contrast - –æ–Ω–∏ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤.'
      ],
      '–û—Å–Ω–æ–≤—ã IELTS': [
        'IELTS –æ—Ü–µ–Ω–∏–≤–∞–µ—Ç 4 –Ω–∞–≤—ã–∫–∞: Listening, Reading, Writing, Speaking. –ö–∞–∂–¥—ã–π —Ä–∞–∑–¥–µ–ª –æ—Ç 0 –¥–æ 9 –±–∞–ª–ª–æ–≤.',
        '–í—Ä–µ–º—è: Listening 30+10 –º–∏–Ω, Reading 60 –º–∏–Ω, Writing 60 –º–∏–Ω, Speaking 11-14 –º–∏–Ω.',
        '–°—Ç—Ä–∞—Ç–µ–≥–∏—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏: –æ–ø—Ä–µ–¥–µ–ª–∏—Ç–µ —Å–ª–∞–±—ã–µ –º–µ—Å—Ç–∞, —Ç—Ä–µ–Ω–∏—Ä—É–π—Ç–µ—Å—å —Ä–µ–≥—É–ª—è—Ä–Ω–æ, –∏–∑—É—á–∞–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç –∑–∞–¥–∞–Ω–∏–π.',
        'Band 7.0 = Upper Intermediate level. –î–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Ç—Ä–µ–Ω–∏—Ä—É–π—Ç–µ –∞–∫–∞–¥–µ–º–∏—á–µ—Å–∫—É—é –ª–µ–∫—Å–∏–∫—É –∏ –≥—Ä–∞–º–º–∞—Ç–∏–∫—É.'
      ]
    };

    const courseResponses = responses[course] || [
      '–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–æ–ø—Ä–æ—Å! –Ø –ø–æ–º–æ–≥—É –≤–∞–º —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å —ç—Ç–æ–π —Ç–µ–º–æ–π IELTS.',
      '–≠—Ç–æ –≤–∞–∂–Ω—ã–π –∞—Å–ø–µ–∫—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ IELTS. –î–∞–≤–∞–π—Ç–µ –ø—Ä–æ—Ä–∞–±–æ—Ç–∞–µ–º —ç—Ç–æ –≤–º–µ—Å—Ç–µ.',
      '–û—Ç–ª–∏—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å! –í IELTS —Ç–∞–∫–∏–µ –¥–µ—Ç–∞–ª–∏ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –≤–∞–∂–Ω—ã.'
    ];

    return courseResponses[Math.floor(Math.random() * courseResponses.length)];
  };

  const getQuickQuestions = (course) => {
    const questions = {
      'Speaking Skills': [
        "–ö–∞–∫ —É–ª—É—á—à–∏—Ç—å –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏–µ?",
        "–ß—Ç–æ –¥–µ–ª–∞—Ç—å, –µ—Å–ª–∏ –∑–∞–±—ã–ª —Å–ª–æ–≤–æ?",
        "–ö–∞–∫ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç –≤ Part 2?",
        "–¢–∏–ø–∏—á–Ω—ã–µ –æ—à–∏–±–∫–∏ –≤ Speaking"
      ],
      'Writing Mastery': [
        "–ö–∞–∫ –Ω–∞–ø–∏—Å–∞—Ç—å –≤–≤–µ–¥–µ–Ω–∏–µ –≤ Task 2?",
        "–õ–µ–∫—Å–∏–∫–∞ –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–æ–≤",
        "–ö–∞–∫ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞—Ç—å –∞—Ä–≥—É–º–µ–Ω—Ç—ã?",
        "–¢–∏–ø–∏—á–Ω—ã–µ –æ—à–∏–±–∫–∏ –≤ Writing"
      ],
      'Listening Practice': [
        "–ö–∞–∫ —É–ª—É—á—à–∏—Ç—å –ø–æ–Ω–∏–º–∞–Ω–∏–µ –∞–∫—Ü–µ–Ω—Ç–æ–≤?",
        "–°—Ç—Ä–∞—Ç–µ–≥–∏–∏ –¥–ª—è Section 1",
        "–ß—Ç–æ –¥–µ–ª–∞—Ç—å, –µ—Å–ª–∏ –Ω–µ —Ä–∞—Å—Å–ª—ã—à–∞–ª?",
        "–ö–∞–∫ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å spelling?"
      ],
      'Reading Comprehension': [
        "–ö–∞–∫ —É–ø—Ä–∞–≤–ª—è—Ç—å –≤—Ä–µ–º–µ–Ω–µ–º?",
        "True/False/Not Given —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏",
        "–¢–µ—Ö–Ω–∏–∫–∏ scanning –∏ skimming",
        "–ö–∞–∫ –ø–æ–Ω—è—Ç—å —Å–ª–æ–∂–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã?"
      ],
      '–û—Å–Ω–æ–≤—ã IELTS': [
        "–°—Ç—Ä—É–∫—Ç—É—Ä–∞ —ç–∫–∑–∞–º–µ–Ω–∞ IELTS",
        "–ö—Ä–∏—Ç–µ—Ä–∏–∏ –æ—Ü–µ–Ω–∫–∏",
        "–ü–ª–∞–Ω –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏",
        "–ö–∞–∫ –¥–æ—Å—Ç–∏—á—å Band 7.0?"
      ]
    };
    return questions[course] || questions['–û—Å–Ω–æ–≤—ã IELTS'];
  };

  const quickQuestions = getQuickQuestions(courseTitle);

  return (
    <>
      {/* –ö–Ω–æ–ø–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —á–∞—Ç–∞ */}
      {externalIsOpen === undefined && (
        <div className="fixed bottom-6 right-6 z-50">
          <button
            onClick={() => setIsOpen(true)}
            className="bg-blue-600 hover:bg-blue-700 text-white p-4 rounded-full shadow-lg transition-colors"
            title="–ò–ò-–ø–æ–º–æ—â–Ω–∏–∫"
          >
            <span className="text-2xl">ü§ñ</span>
          </button>
        </div>
      )}

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —á–∞—Ç–∞ */}
      {actualIsOpen && (
        <div className="fixed inset-0 z-50 overflow-y-auto">
          <div className="flex items-center justify-center min-h-screen p-4">
            <div className="fixed inset-0 bg-black bg-opacity-50" onClick={actualOnClose}></div>
            
            <div className="relative bg-white rounded-lg shadow-xl max-w-2xl w-full max-h-[80vh] flex flex-col">
              {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
              <div className="flex items-center justify-between p-6 border-b">
                <div className="flex items-center">
                  <span className="text-2xl mr-3">ü§ñ</span>
                  <div>
                    <h3 className="text-lg font-semibold">–ò–ò-–ø–æ–º–æ—â–Ω–∏–∫ prepAI</h3>
                    <p className="text-sm text-gray-600">{courseTitle}</p>
                  </div>
                </div>
                <button
                  onClick={actualOnClose}
                  className="text-gray-400 hover:text-gray-600 text-2xl"
                >
                  √ó
                </button>
              </div>

              {/* –ë—ã—Å—Ç—Ä—ã–µ –≤–æ–ø—Ä–æ—Å—ã */}
              <div className="p-4 border-b bg-gray-50">
                <p className="text-sm text-gray-600 mb-2">–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã:</p>
                <div className="flex flex-wrap gap-2">
                  {quickQuestions.map((question, index) => (
                    <button
                      key={index}
                      onClick={() => setInputText(question)}
                      className="text-xs bg-blue-100 text-blue-700 px-3 py-1 rounded-full hover:bg-blue-200 transition-colors"
                    >
                      {question}
                    </button>
                  ))}
                </div>
              </div>

              {/* –°–æ–æ–±—â–µ–Ω–∏—è */}
              <div className="flex-1 overflow-y-auto p-4 space-y-4 max-h-80">
                {messages.map((message) => (
                  <div key={message.id} className={`flex ${message.type === 'user' ? 'justify-end' : 'justify-start'}`}>
                    <div className={`max-w-xs lg:max-w-md px-4 py-2 rounded-lg ${
                      message.type === 'user' 
                        ? 'bg-blue-600 text-white' 
                        : 'bg-gray-100 text-gray-800'
                    }`}>
                      <p className="text-sm">{message.text}</p>
                      <p className="text-xs opacity-70 mt-1">
                        {message.timestamp.toLocaleTimeString()}
                      </p>
                    </div>
                  </div>
                ))}
                
                {isLoading && (
                  <div className="flex justify-start">
                    <div className="bg-gray-100 text-gray-800 px-4 py-2 rounded-lg">
                      <div className="flex items-center space-x-1">
                        <div className="w-2 h-2 bg-gray-400 rounded-full animate-bounce"></div>
                        <div className="w-2 h-2 bg-gray-400 rounded-full animate-bounce" style={{animationDelay: '0.1s'}}></div>
                        <div className="w-2 h-2 bg-gray-400 rounded-full animate-bounce" style={{animationDelay: '0.2s'}}></div>
                      </div>
                    </div>
                  </div>
                )}
                
                <div ref={messagesEndRef} />
              </div>

              {/* –ü–æ–ª–µ –≤–≤–æ–¥–∞ */}
              <div className="border-t p-4">
                <div className="flex space-x-2">
                  <input
                    type="text"
                    value={inputText}
                    onChange={(e) => setInputText(e.target.value)}
                    onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}
                    placeholder="–ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫—É..."
                    className="flex-1 border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
                  />
                  <button
                    onClick={handleSendMessage}
                    disabled={!inputText.trim() || isLoading}
                    className="bg-blue-600 hover:bg-blue-700 disabled:bg-gray-300 text-white px-4 py-2 rounded-lg transition-colors"
                  >
                    –û—Ç–ø—Ä–∞–≤–∏—Ç—å
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>
      )}
    </>
  );
} 