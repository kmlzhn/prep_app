'use client';

import { UserButton, SignedIn, SignedOut, RedirectToSignIn } from "@clerk/nextjs";
import { useUser } from "@clerk/nextjs";
import Link from 'next/link';
import AIChat from '../../components/AIChat';
import { useProgress } from '../../hooks/useProgress';

export default function BasicsCourse() {
  const { isLoaded, isSignedIn, user } = useUser();
  const { isLessonCompleted, markLessonComplete, markLessonIncomplete, getCompletedLessonsCount, calculateProgress } = useProgress();

  if (!isLoaded) {
    return <div className="flex items-center justify-center min-h-screen">–ó–∞–≥—Ä—É–∑–∫–∞...</div>;
  }

  if (!isSignedIn) {
    return <RedirectToSignIn />;
  }

  const courseSlug = 'ielts-basics';
  const totalLessons = 8;

  const courseData = {
    id: 1,
    title: "–û—Å–Ω–æ–≤—ã IELTS",
    description: "–ó–Ω–∞–∫–æ–º—Å—Ç–≤–æ —Å —Ñ–æ—Ä–º–∞—Ç–æ–º —ç–∫–∑–∞–º–µ–Ω–∞ –∏ –±–∞–∑–æ–≤—ã–µ –Ω–∞–≤—ã–∫–∏",
    totalLessons: totalLessons,
    icon: "üìö",
    completedLessons: getCompletedLessonsCount(courseSlug),
    progressPercentage: calculateProgress(courseSlug, totalLessons)
  };

  const lessons = [
    {
      id: 1,
      title: "–í–≤–µ–¥–µ–Ω–∏–µ –≤ IELTS",
      description: "–ß—Ç–æ —Ç–∞–∫–æ–µ IELTS –∏ –∑–∞—á–µ–º –æ–Ω –Ω—É–∂–µ–Ω",
      duration: "15 –º–∏–Ω",
      completed: true,
      type: "video"
    },
    {
      id: 2,
      title: "–°—Ç—Ä—É–∫—Ç—É—Ä–∞ —ç–∫–∑–∞–º–µ–Ω–∞",
      description: "–î–µ—Ç–∞–ª—å–Ω—ã–π –æ–±–∑–æ—Ä –≤—Å–µ—Ö —á–∞—Å—Ç–µ–π —ç–∫–∑–∞–º–µ–Ω–∞ IELTS",
      duration: "20 –º–∏–Ω",
      completed: true,
      type: "video"
    },
    {
      id: 3,
      title: "–ö—Ä–∏—Ç–µ—Ä–∏–∏ –æ—Ü–µ–Ω–∫–∏",
      description: "–ö–∞–∫ –æ—Ü–µ–Ω–∏–≤–∞–µ—Ç—Å—è –∫–∞–∂–¥–∞—è —á–∞—Å—Ç—å —ç–∫–∑–∞–º–µ–Ω–∞",
      duration: "18 –º–∏–Ω",
      completed: true,
      type: "text"
    },
    {
      id: 4,
      title: "–°—Ç—Ä–∞—Ç–µ–≥–∏–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏",
      description: "–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ —ç–∫–∑–∞–º–µ–Ω—É",
      duration: "25 –º–∏–Ω",
      completed: false,
      type: "video"
    },
    {
      id: 5,
      title: "–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—É—á–µ–Ω–∏—è",
      description: "–ö–∞–∫ —Å–æ—Å—Ç–∞–≤–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏",
      duration: "22 –º–∏–Ω",
      completed: false,
      type: "interactive"
    },
    {
      id: 6,
      title: "–û–±—â–∏–µ –æ—à–∏–±–∫–∏ –Ω–æ–≤–∏—á–∫–æ–≤",
      description: "–ß–µ–≥–æ —Å–ª–µ–¥—É–µ—Ç –∏–∑–±–µ–≥–∞—Ç—å –ø—Ä–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ",
      duration: "16 –º–∏–Ω",
      completed: false,
      type: "text"
    },
    {
      id: 7,
      title: "–†–µ—Å—É—Ä—Å—ã –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏",
      description: "–ü–æ–ª–µ–∑–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∏",
      duration: "12 –º–∏–Ω",
      completed: false,
      type: "text"
    },
    {
      id: 8,
      title: "–ò—Ç–æ–≥–æ–≤—ã–π —Ç–µ—Å—Ç",
      description: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è –æ—Å–Ω–æ–≤ IELTS",
      duration: "30 –º–∏–Ω",
      completed: false,
      type: "quiz"
    }
  ];

  const getTypeIcon = (type) => {
    switch (type) {
      case 'video': return 'üé•';
      case 'text': return 'üìÑ';
      case 'interactive': return 'üéØ';
      case 'quiz': return '‚ùì';
      default: return 'üìù';
    }
  };

  return (
    <div className="flex min-h-screen bg-gray-50">
      {/* –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å */}
      <div className="hidden lg:flex w-80 bg-white shadow-sm border-r border-gray-200 flex-col">
        <div className="p-6 border-b border-gray-200">
          <Link href="/" className="flex items-center text-2xl font-bold text-blue-600">
            üß† prepAI
          </Link>
        </div>

        <nav className="flex-1 p-4">
          <div className="mb-6">
            <Link href="/dashboard" className="flex items-center px-3 py-2 text-gray-600 hover:text-blue-600 rounded-lg font-medium">
              ‚Üê –ù–∞–∑–∞–¥ –∫ –æ–±–∑–æ—Ä—É
            </Link>
          </div>

          <div className="mb-6">
            <h3 className="text-sm font-medium text-gray-500 uppercase tracking-wide mb-3">
              {courseData.icon} {courseData.title}
            </h3>
            
            <div className="space-y-1">
              {lessons.map((lesson) => {
                const completed = isLessonCompleted(courseSlug, lesson.id);
                
                // –î–ª—è —É—Ä–æ–∫–æ–≤ —Å –æ—Ç–¥–µ–ª—å–Ω—ã–º–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏ —Å–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫–∏
                if (lesson.id <= 8) {
                  return (
                    <Link 
                      key={lesson.id}
                      href={`/courses/ielts-basics/lessons/lesson-${lesson.id}`}
                      className={`block px-3 py-2 rounded-lg transition-colors ${
                        completed ? 'bg-blue-50 text-blue-600' : 'text-gray-600 hover:text-blue-600'
                      }`}
                    >
                      <div className="flex items-center">
                        <span className="mr-2">{getTypeIcon(lesson.type)}</span>
                        <span className="text-sm font-medium">{lesson.id}. {lesson.title}</span>
                        {completed && <span className="ml-auto text-blue-500">‚úì</span>}
                      </div>
                    </Link>
                  );
                }
                
                // –î–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —É—Ä–æ–∫–æ–≤ –æ—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –µ—Å—Ç—å
                return (
                <div key={lesson.id} className={`px-3 py-2 rounded-lg cursor-pointer ${
                    completed ? 'bg-blue-50 text-blue-600' : 'text-gray-600 hover:text-blue-600'
                }`}>
                  <div className="flex items-center">
                    <span className="mr-2">{getTypeIcon(lesson.type)}</span>
                    <span className="text-sm font-medium">{lesson.id}. {lesson.title}</span>
                      {completed && <span className="ml-auto text-blue-500">‚úì</span>}
                    </div>
                  </div>
                );
              })}
            </div>
          </div>
        </nav>

        <div className="p-4 border-t border-gray-200">
          <SignedIn>
            <div className="flex items-center px-3 py-2">
              <UserButton afterSignOutUrl="/" />
              <span className="ml-2 text-sm text-gray-600">
                {user?.firstName || '–°—Ç—É–¥–µ–Ω—Ç'}
              </span>
            </div>
          </SignedIn>
        </div>
      </div>

      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
      <div className="flex-1 flex flex-col">
        {/* –ú–æ–±–∏–ª—å–Ω—ã–π —Ö–µ–¥–µ—Ä */}
        <div className="lg:hidden bg-white shadow-sm border-b p-4">
          <div className="flex items-center justify-between">
            <Link href="/dashboard" className="text-blue-600">‚Üê –ù–∞–∑–∞–¥</Link>
            <SignedIn>
              <UserButton afterSignOutUrl="/" />
            </SignedIn>
          </div>
        </div>

        <main className="flex-1 p-4 lg:p-8">
          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫—É—Ä—Å–∞ */}
          <div className="mb-8">
            <div className="flex items-center mb-4">
              <span className="text-4xl mr-4">{courseData.icon}</span>
              <div>
                <h1 className="text-3xl font-bold text-gray-900">{courseData.title}</h1>
                <p className="text-gray-600">{courseData.description}</p>
              </div>
            </div>

            {/* –ü—Ä–æ–≥—Ä–µ—Å—Å */}
            <div className="bg-white rounded-lg p-6 shadow-sm border-l-4 border-blue-500 mb-6">
              <div className="flex items-center justify-between mb-3">
                <h3 className="text-lg font-semibold">–í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å</h3>
                <span className="text-sm text-gray-600">
                  {courseData.completedLessons} –∏–∑ {courseData.totalLessons} —É—Ä–æ–∫–æ–≤
                </span>
              </div>
              <div className="bg-gray-200 rounded-full h-3">
                <div 
                  className="bg-blue-500 h-3 rounded-full transition-all duration-300" 
                  style={{ width: `${courseData.progressPercentage}%` }}
                ></div>
              </div>
            </div>
          </div>

          {/* –°–ø–∏—Å–æ–∫ —É—Ä–æ–∫–æ–≤ */}
          <div className="space-y-4">
            {lessons.map((lesson) => {
              const completed = isLessonCompleted(courseSlug, lesson.id);
              
              const handleLessonToggle = () => {
                if (completed) {
                  markLessonIncomplete(courseSlug, lesson.id);
                } else {
                  markLessonComplete(courseSlug, lesson.id);
                }
              };

              return (
              <div key={lesson.id} className={`bg-white rounded-lg p-6 shadow-sm border-l-4 ${
                  completed ? 'border-blue-500' : 'border-gray-300'
              }`}>
                <div className="flex items-start justify-between">
                  <div className="flex-1">
                    <div className="flex items-center mb-2">
                      <span className="text-xl mr-3">{getTypeIcon(lesson.type)}</span>
                      <h3 className="text-lg font-semibold text-gray-900">{lesson.title}</h3>
                        {completed && (
                        <span className="ml-3 bg-blue-500 text-white px-2 py-1 rounded-full text-xs">
                          –ó–∞–≤–µ—Ä—à–µ–Ω–æ
                        </span>
                      )}
                    </div>
                    <p className="text-gray-600 mb-3">{lesson.description}</p>
                    <div className="flex items-center justify-between">
                      <span className="text-sm text-gray-500">–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {lesson.duration}</span>
                        <div className="flex items-center space-x-2">
                          {/* –ö–Ω–æ–ø–∫–∏ –¥–ª—è —É—Ä–æ–∫–æ–≤ —Å –æ—Ç–¥–µ–ª—å–Ω—ã–º–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏ */}
                          {lesson.id <= 8 ? (
                            <Link 
                              href={`/courses/ielts-basics/lessons/lesson-${lesson.id}`}
                              className={`px-6 py-2 rounded-lg font-semibold transition-colors ${
                                completed 
                                  ? 'bg-gray-100 text-gray-700 hover:bg-gray-200' 
                                  : 'bg-blue-600 text-white hover:bg-blue-700'
                              }`}
                            >
                              {completed ? '–ü–æ–≤—Ç–æ—Ä–∏—Ç—å —É—Ä–æ–∫' : '–ù–∞—á–∞—Ç—å —É—Ä–æ–∫'}
                            </Link>
                          ) : (
                            <button 
                              onClick={handleLessonToggle}
                              className={`px-6 py-2 rounded-lg font-semibold transition-colors ${
                                completed 
                          ? 'bg-gray-100 text-gray-700 hover:bg-gray-200' 
                          : 'bg-blue-600 text-white hover:bg-blue-700'
                              }`}
                            >
                              {completed ? '–ü–æ–≤—Ç–æ—Ä–∏—Ç—å' : '–ù–∞—á–∞—Ç—å —É—Ä–æ–∫'}
                            </button>
                          )}
                          {completed && (
                            <button 
                              onClick={() => markLessonIncomplete(courseSlug, lesson.id)}
                              className="px-3 py-2 text-gray-400 hover:text-red-600 transition-colors"
                              title="–û—Ç–º–µ—Ç–∏—Ç—å –∫–∞–∫ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–π"
                            >
                              ‚úó
                      </button>
                          )}
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              );
            })}
          </div>
        </main>
      </div>
      
      {/* –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫ */}
      <AIChat 
        courseTitle="–û—Å–Ω–æ–≤—ã IELTS" 
        currentTopic="IELTS Basics"
      />
    </div>
  );
} 